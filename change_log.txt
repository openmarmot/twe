TWE Project : Change Log

---------------------------------
April 13 2021

summary 
- added object code and spawns for a couple more weapons
- added rotation and changed spawn locations for weapons a bit for variety 
- added code to drop your current weapon if you pickup a new one 
- added code so that gun ai actually gets updates when equipped which fixed a timing bug with firing 

---------------------------------
April 11 2021

summary 
- added collision checking for projectiles 
- added collision handling for humanoids
- added blood splatter as a visual indication that you hit something 

ai_projectile
- added a max flight time so bullets despawn after awhile 
- ai.update now checks collision

ai_zombie 
- elimated class and moved the code to ai_man 

ai_man 
- added collision event handler
- added health. collision with projectile removes health 
- health<1 means the object is removed.. for now  

world 
- added a new object collection for humans 
    - part of keeping collision lists as small as possible 
- added a collision checker class 

general/misc
- lots of misc code cleanup to make things easier to use 

now that I can optionally draw collision circles I would say that collision appears to work pretty great.


---------------------------------
April 10 2021

graphics_2d_pygame
- added new 'debug_text_queue' with fps and other stats 
    - always on for now, but will probably toggle from the debug menu in the future
- added a bool to toggle drawing collision circles (very helpful for debug)

ai_man, ai_gun, ai_projectile, math_2d
- added a ton of code to support projectiles 
- the gun can now fire!! ( pick up gun then press f)

misc thoughts
- need to add expiration for projectiles and think about speed and other values 
- need to add collision for bullets and see what the performance impact is
---------------------------------
April 05 2021

ai_man 
- added logic to auto equip a weapon if one is picked up 
- should weapon just be a reference to something in the inventory, or should i 
    actually remove the weapon from inventory when it is equipped ?

removed 'time_passed' as a parameter from a bunch of functions. 
- passing it from function to function in long chains was getting ridiculous
- easier/cleaner to just reference it directly when needed from graphics_2d_pygame

graphics_2d_pygame
- added in max_fps value (pygame will limit to this max). set to 40 for now 
- added in line in update method to print fps - disabled for now 
    - game currently stays at about max until zombie count gets over several hundred 


---------------------------------
April 02 2021

thinking about guns and gun mags but haven't reached any conclusions 
on how to handle it yet. 
- i think i want to abstract mags, they would be too small to be 
    easily visible on the world map 
- one possibility is to have bandoleers/satchels/etc that dictate how many mags 
    you have 
- i kinda think that i want mags to be tossed on the ground when you reload 
    - and make them non-retrievable (as mags aren't modeled as their own objects)

need to think about whether the player needs their own AI class 
    - thinking it would make more sense to combine it with a ai_man class 
        - that way player could easily jump in and out of bots
    - decision was to go through with combining. 

- some work on building out functions for ai_gun and ai_man

---------------------------------
March 28 2021
- implemented image lists so object can animate/change appearance 
    - need to come up with standard image orders 
        - for example a human object would have the following  [standing,walking,shooting,dead]
        - a chest may have [closed,open]

- made some horrid art for a warehouse to use the new image system 
    - inside 
    - outside 

- implemented a warehouse object that utilizes the new image lists to show 
    a outside and inside view depending how close the player is. 
    this is kind of hacky for now. distance from the object doesn't work well with a 
    rectangular object as you just have to use a radius

- rethought render levels and added a couple levels 
        # render level kind of a 'z' layer
        # 0 - ground cover
        # 1 - man made ground cover (cement, building insides)
        # 2 - objects laying on the ground (weapons,etc)
        # 3 - objects walking on the ground (humans, animals, vehicles)
        # 4 - objects above ground (birds, planes, clouds, etc)


i suppose the object AI could just switch the image name instead of having a list and changing the index 
    but by having a list I can keep all the image names in world_builder so they are easy to swap out. 
    this keeps the AI code more reusable 
---------------------------------
March 25 2021
- fixed gun object so it is using ai_gun instead of ai_player

-----------------------------------------------------
March 24 2021
- fixing a lot of bugs introduced in the last couple updates

-----------------------------------------------------
March 22 2021
- realized there was no strong need for child classes from WorldObject and 
    rewrote code to just spawn WorldObject objects directly
    - under this design any code that makes the world_object unique will be in the AI sub class 
    - deleted wo_crate, wo_player, wo_vehicle, etc 
    - object creation code continues to be centralized in world_builder 

note 
- need to create a debug utility to dump a txt file with object details for every object in the world 

-----------------------------------------------------
March 17 2021
- thinking about inventory and weapons systems. started fleshing 
    out inventory functions in world_object 
    - added basic item pickup to gun menu 
-----------------------------------------------------
March 16 2021
- collapsed wo_zombie, wo_player, and wo_man all into wo_man and made
    world_builder the object constructor
    - I wasn't sure passing in a imported class as a variable would work but it did 
- 

-----------------------------------------------------
March 10 2021
- added some bools to world_object to identify whether something is a vehicle, player, or gun 
    these are the three main things you can interact with at the moment 
    long term this may not be a great system 
- worked on object menus for guns/crates/vehicles

-----------------------------------------------------
March 09 2021
- created vehicle class for kubelwagen

-----------------------------------------------------
March 08 2021
- crate object stuff 
    - some code cleanup in wo_crate to make it a usable object 
    - added wo_crate to world_builder
    - added spawn option to debug menu ( hit ~) 
    - i initially accidentally set the crate coords to a reference of the player , 
        resulting in the crate following me around
- kubelwagen 
    - started adding some base code for the kubelwagen as 
        implementing some rudimentary vehicles is on the near term 
        to do list 

graphics note 
- rendering seems to be better when im on my laptop and not hooked into my
    external 4k. rendering on the 4k monitor seems to have a slight chop or jitter

- the crate looks like vinyl flooring. maybe thats where i got the texture from 

-----------------------------------------------------
March 02 2021
- more work on world_menu (lots to do here)
    - added world_menu text_queue to display via graphics_2d_pygame 
    - implemented debug menu (~) 
    - fixed some logic errors
- disabled zombie spawning on start. you can now spawn them from the debug menu 

thoughts 
- graphics_2d_pygame could use a bit of a rewrite to make it cleaner and more isolated
    ideally it should be easy to replace with another graphics library
- desire to implement my cat intensifies 
-----------------------------------------------------
Feb 27 2021
- added a new to me 'islice' in graphics_2d_pygame to display the first three lines from the text queue 
- created a new zombie object to serve as a good test object 
    - quick zombie art 
    - moved speed randomization code to the init of the wo_zombie world object 
    - speed for other objects should probably be declared in init as well 
- repurposing world_builder as a static generator that will be used to generate ALL world objects 
    - can be referenced from any object, static file not a class, no state 
- added zombie and zombie horde generators to world_builder 

-----------------------------------------------------
Feb 03 2021
- added code to graphics_2d_game to push number key events to world_menu 
    for ingame menu usage 
- started on some world_menu code - got stuck on how this is being displayed
    probably need another text queue -- but do i really want all of these to be 
    stored in the graphics_2d_pygame class? maybe i need a text object game object 

- thought - why is world menu in the world class at all? 
    - I guess it needs to be somewhere 
-----------------------------------------------------
Jan 10 2021
- created crate.png art 
- code for crate image load 
- wo_crate object  

-----------------------------------------------------
December 29 2020
- moved project over to windows from mac
- minor code cleanup in graphics_2d_pygame.py 

-----------------------------------------------------
November 29 2020
- moved graphics_2d_pygame object creation into world class to solve clean up the init ordering
- moved init for world pointer in graphics_2d_game into the init function where it should logically be 
- created a class for the world_menu that will be used to interact with objects


-----------------------------------------------------
November 03 2020
- added a text queue and some basic text handling

-----------------------------------------------------
October 26 2020
- made a couple small changes to wo_gun so it could be added to the test world 

# issue notes
- hit box seems bad - at least when determining what is under the mouse cursor.
    it seems way to the left

-----------------------------------------------------
October 14 2020
- moved the world building stuff to a new world_builder file

-----------------------------------------------------
October 06 2020
- added another list to world class to track which objects can be collided with 
    this is useful to differentiate between objects that are just particles
- added a basic collision square function to math_2d 
- added selection of objects in the screen space with the mouse to graphics_2d_pygame 
    this is there instead of math_2d because its more specific to the graphics engine
    and specificaly the render lists and screen space coords 

-----------------------------------------------------
September 22 2020
- removed un-needed functions to add/remove objects in graphics_2d_pygame 
- started puzzling through map loading. not sure what code file will handle that yet
    - may not be a responsibility of 'world' class 
-----------------------------------------------------
September 14 2020
- created some place holder art for weapons and various soldier uniforms
-----------------------------------------------------
September 08 2020
- started fleshing out a gun object and gun_mag object 
    - started with a mp40 as per tradition
- added inventory to the base world_object class 
- fixed a confusing logic error in wo_man and wo_player where i wasn't triggering init of the 
    base class. it confuses me why this wasn't breaking anything. very odd
- some code formatting cleanup
-----------------------------------------------------
September 07 2020
- added in simple movement for the player 
- confirmed that ai zombie rotation code seems to work great
- confirmed that world coord to screen coord translation seems to work great 
- added in 'move to target' math
- tested engine with 500 'bob' zombies - everything was still fast
-----------------------------------------------------
September 06 2020

- blew off the dust on this project .. again :D 
- started working on the input handling - trying to keep it in
graphics_2d_pygame as much as possible.

-----------------------------------------------------
April 12 2020

- blew off the dust on this project 
- started moving pygame stuff from twe.py and world.py to graphics_2d_pygame.py 

-----------------------------------------------------
June 18 2016

- added image rotation
-the correct image orientation is apparently forward is 'up'
- confirmed that world transforms are behaving correctly.
- remember on screen coordinate y starts at zero and gets bigger as
it goes down
-----------------------------------------------------
June 18 2016

-created project
-worked on coordinate system and world->screen transforms
-moved to using tuples for coordinates from a dedicated class for simplicity
may change in the future.
-created man.png
-created kubelwagen.png
-----------------------------------------------------
